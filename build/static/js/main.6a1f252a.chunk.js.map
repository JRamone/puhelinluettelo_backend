{"version":3,"sources":["components/filter.js","components/persons.js","services/personservice.js","components/personform.js","components/message.js","App.js","index.js"],"names":["Filter","nameFilter","handleFilterChange","value","onChange","Persons","persons","deleteButtonHandler","filter","person","name","toLowerCase","includes","map","key","number","id","onClick","baseUrl","axios","get","then","response","data","post","delete","newnumber","put","PersonForm","setMessage","setMessageType","setPersons","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","personObject","window","confirm","personToUpdate","find","personservice","responsePerson","setTimeout","catch","error","concat","message","target","type","Message","style","color","background","borderStyle","borderRadius","padding","marginBottom","fontStyle","fontSize","App","setNameFilter","messageType","useEffect","update","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a1f252a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({nameFilter,handleFilterChange}) => {\n     \n    return (\n        <>\n        <input value={nameFilter} onChange={handleFilterChange}></input>\n        </>\n    )\n}\n\nexport default Filter","import React from 'react';\n\nconst Persons = ({persons,nameFilter,deleteButtonHandler}) => {\n     \n    return (\n        <>\n        {persons.filter((person) => person.name.toLowerCase().includes(nameFilter)).map((person) => <p key={person.name}>{person.name}  {person.number}\n        <button id = {person.id} value={person.name} onClick={deleteButtonHandler}>delete</button>\n        </p>)}\n        </>\n    )\n}\n\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n} \n\nconst addPerson = (person) => {\n    const request = axios.post(baseUrl, person)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (person) => {\n    const request = axios.delete(`${baseUrl}/${person}`)\n    return request.then(response => response.data)\n}\n\nconst updatePerson =(person, newnumber) => {\n    const request = axios.put(`${baseUrl}/${person}`,newnumber)\n    return request.then(response => response.data)\n}\n    \nexport default {\n    getAll,\n    addPerson,\n    deletePerson,\n    updatePerson\n}","import React,{useState} from 'react';\nimport personservice from '../services/personservice';\n\n\n\nconst PersonForm = ({setMessage,setMessageType,persons,setPersons}) => {\n\n  const [newName,setNewName] = useState(\"\");\n  const [newNumber,setNewNumber] = useState(\"\");\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name : newName,\n      number : newNumber\n      }\n        \n    if (persons.map((person) => person.name).includes(newName)){\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const personToUpdate = persons.find(person => person.name === personObject.name)\n        personservice\n          .updatePerson(personToUpdate.id,{...personToUpdate, number : newNumber})\n          .then(responsePerson => {\n            setPersons(persons.map(person => person.id !== responsePerson.id ? person : responsePerson))\n            setNewName(\"\")\n            setNewNumber(\"\")\n            setMessageType(\"success\")\n            setMessage(`${newName} succesfully updated`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000);\n          })\n          .catch(error => {\n            setMessageType(\"error\")\n            setMessage(`${newName} is already deleted from the server.`)\n            setTimeout(() => {\n              setMessage(null)\n            },3000);\n            setNewName(\"\")\n            setNewNumber(\"\")\n            personservice.getAll().then(persons => setPersons(persons))\n            return\n          })\n      }\n    return\n    }\n    personservice\n      .addPerson(personObject) \n      .then(personObject => {\n        setMessageType(\"success\")\n        setPersons(persons.concat(personObject))\n        setNewName(\"\")\n        setNewNumber(\"\")\n        setMessage(`${personObject.name} succesfully added`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000);\n      })\n      .catch(error => {\n        const message = error.response.data.error\n        setMessageType(\"error\")\n        setMessage(message)\n        setTimeout(() => {\n        setMessage(null)\n        },3000);\n        setNewName(\"\")\n        setNewNumber(\"\")\n      })\n  }\n\n  return (\n    <>\n      <form onSubmit= {addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/><br></br>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n    )\n}\n\nexport default PersonForm","\nimport React from 'react'\n\nconst Message = ({type,message}) => {\n\n    if (message == null){\n        return null\n    }\n    const errorMessageStyle = {\n        color : 'red',\n        background : 'lightgrey',\n        borderStyle : 'Solid',\n        borderRadius : 5,\n        padding : 10,\n        marginBottom : 10, \n        fontStyle : 'italic',\n        fontSize : 16\n    }\n\n    const successMessageStyle = {\n        color : 'green',\n        background : 'lightgrey',\n        borderStyle : 'Solid',\n        borderRadius : 5,\n        padding : 10,\n        marginBottom : 10, \n        fontStyle : 'italic',\n        fontSize : 16\n    }\n\n    if (type === \"success\"){\n        return (\n            <p style={successMessageStyle}>\n                {message}\n            </p>\n        )\n    }\n    if (type === \"error\"){\n        return (\n            <p style = {errorMessageStyle}>\n                {message}\n            </p>\n        )\n    }\n    \n}\n\nexport default Message","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Filter from './components/filter';\nimport Persons from './components/persons';\nimport PersonForm from './components/personform';\nimport personservice from './services/personservice';\nimport Message from './components/message'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [nameFilter,setNameFilter] = useState(\"\");\n  const [message,setMessage] = useState(null);\n  const [messageType,setMessageType] = useState(\"success\")\n  \n  const handleFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n  const deleteButtonHandler = (event) => {\n    const name = event.target.value\n    const id = event.target.id\n    const ok = window.confirm(`Are you sure you want to delete ${name}`)\n    if(ok){\n      personservice\n      .deletePerson(id)\n      .then(update => {\n        setPersons(persons.filter(person => person.id != id))\n        setMessage(`${name} succesfully deleted`)\n        setTimeout(() => {\n        setMessage(null)\n      },3000)\n    })\n    }  \n  }\n\n  useEffect(() => {\n    personservice.getAll().then(persons => setPersons(persons))\n  },[])\n     \n  return( \n    <div>\n      <h2>Phonebook</h2>\n      <Message  message={message} type = {messageType}/>\n      <h3>Filter</h3>\n      <Filter handleFilterChange={handleFilterChange} nameFilter={nameFilter}/>\n      <h3>Add a New</h3>\n      <PersonForm setMessageType={setMessageType} setMessage={setMessage} persons={persons} setPersons={setPersons}/>      \n      <h3>Numbers</h3>\n      <Persons deleteButtonHandler = {deleteButtonHandler} persons={persons} nameFilter={nameFilter.toLowerCase()}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}